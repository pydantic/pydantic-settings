[build-system]
requires = ['hatchling']
build-backend = 'hatchling.build'

[tool.hatch.version]
path = 'pydantic_settings/version.py'

[project]
name = 'pydantic-settings'
description = 'Settings management using Pydantic'
authors = [
    {name = 'Samuel Colvin', email = 's@muelcolvin.com'},
    {name = 'Eric Jolibois', email = 'em.jolibois@gmail.com'},
    {name = 'Hasan Ramezani', email = 'hasan.r67@gmail.com'},
]
license = 'MIT'
readme = 'README.md'
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Intended Audience :: Developers',
    'Intended Audience :: Information Technology',
    'Intended Audience :: System Administrators',
    'License :: OSI Approved :: MIT License',
    'Framework :: Pydantic',
    'Framework :: Pydantic :: 2',
    'Operating System :: Unix',
    'Operating System :: POSIX :: Linux',
    'Environment :: Console',
    'Environment :: MacOS X',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Topic :: Internet',
]
requires-python = '>=3.7'
dependencies = [
    'pydantic>=2.0b1',
    'python-dotenv>=0.21.0',
]
dynamic = ['version']

[project.urls]
Homepage = 'https://github.com/pydantic/pydantic-settings'
Funding = 'https://github.com/sponsors/samuelcolvin'
Source = 'https://github.com/pydantic/pydantic-settings'
Changelog = 'https://github.com/pydantic/pydantic-settings/releases'
# TODO: Documentation

[tool.pytest.ini_options]
testpaths = 'tests'
filterwarnings = [
    'error',
    'ignore:This is a placeholder until pydantic-settings.*:UserWarning',
]

[tool.coverage.run]
source = ['pydantic_settings']
branch = true
context = '${CONTEXT}'

[tool.coverage.report]
precision = 2
exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'raise NotImplemented',
    'if TYPE_CHECKING:',
    '@overload',
]

[tool.coverage.paths]
source = [
    'pydantic_settings/',
]

[tool.ruff]
line-length = 120
extend-select = ['Q', 'RUF100', 'C90', 'UP', 'I']
flake8-quotes = {inline-quotes = 'single', multiline-quotes = 'double'}
mccabe = { max-complexity = 14 }
isort = { known-first-party = ['pydantic_settings', 'tests'] }
target-version = 'py37'

[tool.black]
color = true
line-length = 120
target-version = ['py310']
skip-string-normalization = true

[tool.mypy]
python_version = '3.10'
show_error_codes = true
follow_imports = 'silent'
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
warn_unused_configs = true
disallow_subclassing_any = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_calls = true

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = true

# remaining arguments from `mypy --strict` which cause errors
# no_implicit_optional = true
# warn_return_any = true

# ansi2html and devtools are required to avoid the need to install these packages when running linting,
# they're used in the docs build script
[[tool.mypy.overrides]]
module = [
    'dotenv.*',
]
ignore_missing_imports = true
