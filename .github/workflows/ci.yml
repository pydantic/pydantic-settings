name: CI

on:
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request: {}

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: set up python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - uses: pre-commit/action@v3.0.0
      with:
        extra_args: --all-files

  test:
    name: test py${{ matrix.python }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        python: ['3.7', '3.8', '3.9', '3.10', '3.11']

    env:
      PYTHON: ${{ matrix.python }}
      OS: ${{ matrix.os }}

    runs-on: ${{ matrix.os }}-latest

    steps:
    - uses: actions/checkout@v2

    - name: set up python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}

    - uses: pdm-project/setup-pdm@v3
      with:
        python-version: ${{ matrix.python }}
        cache: 'true'
        cache-dependency-path: '**/pdm.lock'
        
    - name: test with dotenv
      run: make install test
      env:
        COVERAGE_FILE: .coverage.${{ runner.os }}-py${{ matrix.python }}-with-dotenv
        CONTEXT: ${{ runner.os }}-py${{ matrix.python }}-with-dotenv

    - run: pdm remove python-dotenv

    - name: test without dotenv
      run: make install test
      env:
        COVERAGE_FILE: .coverage.${{ runner.os }}-py${{ matrix.python }}-without-dotenv
        CONTEXT: ${{ runner.os }}-py${{ matrix.python }}-without-dotenv

    - run: coverage combine
    - run: pdm run coverage xml

    - uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        env_vars: PYTHON,OS

  check:  # This job does nothing and is only used for the branch protection
    if: always()
    needs: [lint, test]
    runs-on: ubuntu-latest

    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        id: all-green
        with:
          jobs: ${{ toJSON(needs) }}

  release:
    name: Release
    needs: [check]
    if: "success() && startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    environment: release

    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v2

      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: install
        run: pip install -U build

      - name: check GITHUB_REF matches package version
        uses: samuelcolvin/check-python-version@v3.1
        with:
          version_file_path: pydantic_settings/version.py

      - name: build
        run: python -m build

      - name: Upload package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
